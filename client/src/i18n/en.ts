import { defineLang, ss } from "./defineLang.js"

export const en = defineLang({
  aboutApp: ss("about app"),
  aboutDeveloper: ss("about developer"),
  appIntroDescription: ss(
    "With Booky, youâ€™ll never lose track of your books again! Ready to get started?",
  ),
  appTagline: ss("easily manage your books!"),
  areYouSure: ss("are you sure?"),
  author: ss("author"),
  authWelcomeDescription: ss("login or register right now to start."),
  authWelcomeTitle: ss("welcome to booky!"),
  bio: ss("bio"),
  birthdate: ss("birthdate"),
  bookManagementApp: ss("book management app"),
  books: ss("books"),
  categories: ss("categories"),
  category: ss("category"),
  choose: ss("choose"),
  color: ss("color"),
  configDir: "ltr",
  configIconMirror: false,
  configListItemSeparator: ",",
  correct: ss("correct"),
  darkTheme: ss("dark theme"),
  deleteBook: ss("delete book"),
  description: ss("description"),
  details: ss("details"),
  developerIntro: ss(
    "Frontend developer (React) with 1 year experience in building web apps, with a focus on quality, clean code and providing a smooth and nice user experience.",
  ),
  developerName: ss("Mohammad Mahdi Bahrami"),
  doneSuccessfully: ss("done succesfully!"),
  editBook: ss("edit book"),
  email: ss("email"),
  fieldIsRequired: ss("this field is required"),
  firstName: ss("first name"),
  goalOfApp: ss(
    "the goal of this app is to help you manage your books and study more, better and faster.",
  ),
  language: ss("language"),
  lastName: ss("last name"),
  loading: ss("loading"),
  login: ss("login"),
  manageCategories: ss("manage categories"),
  name: ss("name"),
  newBook: ss("new book"),
  newCategory: ss("new category"),
  nPages: n => ss(`${n} pages`),
  numberOfPages: ss("number of pages"),
  optional: ss("optional"),
  password: ss("password"),
  passwordRepeat: ss("password repeat"),
  passwordsDoNotMatch: ss("passwords do not match!"),
  pleaseTryAgain: ss("please try again"),
  profile: ss("profile"),
  reading: ss("reading"),
  register: ss("register"),
  residencePlace: ss("place of residence"),
  settings: ss("settings"),
  shouldBeValidEmail: ss("please enter a valid email"),
  start: ss("start"),
  thisActionIsIrreversible: ss("This action is irreversible"),
  title: ss("title"),
  unAuthorizedErrorMsg: ss(
    "Not authorized. Please sign out and sign in again.",
  ),
  usedTechnologies: ss("technologies used"),
  validatingMsg: ss("validating"),
  version: ss("version"),
  visitDeveloperWebsite: ss("visit developer website"),
  generalErrorMsg: ss("An error occured."),
  noBooksSectionTitle: ss("no books for now!"),
  noBooksSectionDescription:
    "You currently do NOT have any books for us to show. To start, add a new book.",
  noCategoriesSectionTitle: ss("no categories for now!"),
  noCategoriesSectionDescription:
    "You currently do NOT have any categories for us to show. To start, add a new category.",
  btns: {
    cancel: ss("cancel"),
    create: ss("create"),
    delete: ss("delete"),
    edit: ss("edit"),
    close: ss("close"),
    ok: ss("OK"),
  },
  languagesName: {
    ar: ss("arabic"),
    fa: ss("persian"),
    en: ss("english"),
    fr: ss("french"),
    jp: ss("japanese"),
  },
  settingsPage: {
    languageChangeWarning: ss(
      "After changing language, you must re run the app.",
    ),
  },
  thingShouldBeAtLeastNCharacters: (thing, n) =>
    ss(`${thing} must be at least ${n} character(s) long.`),
  fieldLabel: {
    required: label => ss(`${label}:`),
    optional: label => ss(`${label} (${en.optional()}):`),
  },
})
