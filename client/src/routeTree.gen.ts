/** biome-ignore-all assist/source/organizeImports: this file is generated! */

/** biome-ignore-all lint/suspicious/noExplicitAny: this file is generated! */

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from "./routes/__root"
import { Route as IntroRouteImport } from "./routes/intro"
import { Route as DevRouteImport } from "./routes/dev"
import { Route as AuthRouteRouteImport } from "./routes/auth/route"
import { Route as AuthenticatedRouteRouteImport } from "./routes/_authenticated/route"
import { Route as IndexRouteImport } from "./routes/index"
import { Route as AuthSignupRouteImport } from "./routes/auth/signup"
import { Route as AuthLoginRouteImport } from "./routes/auth/login"
import { Route as AuthenticatedBooksIndexRouteImport } from "./routes/_authenticated/books/index"
import { Route as AuthenticatedBooksNewRouteImport } from "./routes/_authenticated/books/new"
import { Route as AuthenticatedProfileSettingsIndexRouteImport } from "./routes/_authenticated/profile/settings/index"
import { Route as AuthenticatedProfileCategoriesIndexRouteImport } from "./routes/_authenticated/profile/categories/index"
import { Route as AuthenticatedProfilemainIndexRouteImport } from "./routes/_authenticated/profile/(main)/index"
import { Route as AuthenticatedBooksIdIndexRouteImport } from "./routes/_authenticated/books/$id/index"
import { Route as AuthenticatedProfileCategoriesNewRouteImport } from "./routes/_authenticated/profile/categories/new"
import { Route as AuthenticatedProfileCategoriesIdRouteImport } from "./routes/_authenticated/profile/categories/$id"
import { Route as AuthenticatedBooksIdEditRouteImport } from "./routes/_authenticated/books/$id/edit"

const IntroRoute = IntroRouteImport.update({
  id: "/intro",
  path: "/intro",
  getParentRoute: () => rootRouteImport,
} as any)
const DevRoute = DevRouteImport.update({
  id: "/dev",
  path: "/dev",
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: "/auth",
  path: "/auth",
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: "/_authenticated",
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: "/signup",
  path: "/signup",
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: "/login",
  path: "/login",
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthenticatedBooksIndexRoute = AuthenticatedBooksIndexRouteImport.update({
  id: "/books/",
  path: "/books/",
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedBooksNewRoute = AuthenticatedBooksNewRouteImport.update({
  id: "/books/new",
  path: "/books/new",
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedProfileSettingsIndexRoute =
  AuthenticatedProfileSettingsIndexRouteImport.update({
    id: "/profile/settings/",
    path: "/profile/settings/",
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedProfileCategoriesIndexRoute =
  AuthenticatedProfileCategoriesIndexRouteImport.update({
    id: "/profile/categories/",
    path: "/profile/categories/",
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedProfilemainIndexRoute =
  AuthenticatedProfilemainIndexRouteImport.update({
    id: "/profile/(main)/",
    path: "/profile/",
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedBooksIdIndexRoute =
  AuthenticatedBooksIdIndexRouteImport.update({
    id: "/books/$id/",
    path: "/books/$id/",
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedProfileCategoriesNewRoute =
  AuthenticatedProfileCategoriesNewRouteImport.update({
    id: "/profile/categories/new",
    path: "/profile/categories/new",
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedProfileCategoriesIdRoute =
  AuthenticatedProfileCategoriesIdRouteImport.update({
    id: "/profile/categories/$id",
    path: "/profile/categories/$id",
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedBooksIdEditRoute =
  AuthenticatedBooksIdEditRouteImport.update({
    id: "/books/$id/edit",
    path: "/books/$id/edit",
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute
  "/auth": typeof AuthRouteRouteWithChildren
  "/dev": typeof DevRoute
  "/intro": typeof IntroRoute
  "/auth/login": typeof AuthLoginRoute
  "/auth/signup": typeof AuthSignupRoute
  "/books/new": typeof AuthenticatedBooksNewRoute
  "/books": typeof AuthenticatedBooksIndexRoute
  "/books/$id/edit": typeof AuthenticatedBooksIdEditRoute
  "/profile/categories/$id": typeof AuthenticatedProfileCategoriesIdRoute
  "/profile/categories/new": typeof AuthenticatedProfileCategoriesNewRoute
  "/books/$id": typeof AuthenticatedBooksIdIndexRoute
  "/profile": typeof AuthenticatedProfilemainIndexRoute
  "/profile/categories": typeof AuthenticatedProfileCategoriesIndexRoute
  "/profile/settings": typeof AuthenticatedProfileSettingsIndexRoute
}
export interface FileRoutesByTo {
  "/": typeof IndexRoute
  "/auth": typeof AuthRouteRouteWithChildren
  "/dev": typeof DevRoute
  "/intro": typeof IntroRoute
  "/auth/login": typeof AuthLoginRoute
  "/auth/signup": typeof AuthSignupRoute
  "/books/new": typeof AuthenticatedBooksNewRoute
  "/books": typeof AuthenticatedBooksIndexRoute
  "/books/$id/edit": typeof AuthenticatedBooksIdEditRoute
  "/profile/categories/$id": typeof AuthenticatedProfileCategoriesIdRoute
  "/profile/categories/new": typeof AuthenticatedProfileCategoriesNewRoute
  "/books/$id": typeof AuthenticatedBooksIdIndexRoute
  "/profile": typeof AuthenticatedProfilemainIndexRoute
  "/profile/categories": typeof AuthenticatedProfileCategoriesIndexRoute
  "/profile/settings": typeof AuthenticatedProfileSettingsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  "/": typeof IndexRoute
  "/_authenticated": typeof AuthenticatedRouteRouteWithChildren
  "/auth": typeof AuthRouteRouteWithChildren
  "/dev": typeof DevRoute
  "/intro": typeof IntroRoute
  "/auth/login": typeof AuthLoginRoute
  "/auth/signup": typeof AuthSignupRoute
  "/_authenticated/books/new": typeof AuthenticatedBooksNewRoute
  "/_authenticated/books/": typeof AuthenticatedBooksIndexRoute
  "/_authenticated/books/$id/edit": typeof AuthenticatedBooksIdEditRoute
  "/_authenticated/profile/categories/$id": typeof AuthenticatedProfileCategoriesIdRoute
  "/_authenticated/profile/categories/new": typeof AuthenticatedProfileCategoriesNewRoute
  "/_authenticated/books/$id/": typeof AuthenticatedBooksIdIndexRoute
  "/_authenticated/profile/(main)/": typeof AuthenticatedProfilemainIndexRoute
  "/_authenticated/profile/categories/": typeof AuthenticatedProfileCategoriesIndexRoute
  "/_authenticated/profile/settings/": typeof AuthenticatedProfileSettingsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | "/"
    | "/auth"
    | "/dev"
    | "/intro"
    | "/auth/login"
    | "/auth/signup"
    | "/books/new"
    | "/books"
    | "/books/$id/edit"
    | "/profile/categories/$id"
    | "/profile/categories/new"
    | "/books/$id"
    | "/profile"
    | "/profile/categories"
    | "/profile/settings"
  fileRoutesByTo: FileRoutesByTo
  to:
    | "/"
    | "/auth"
    | "/dev"
    | "/intro"
    | "/auth/login"
    | "/auth/signup"
    | "/books/new"
    | "/books"
    | "/books/$id/edit"
    | "/profile/categories/$id"
    | "/profile/categories/new"
    | "/books/$id"
    | "/profile"
    | "/profile/categories"
    | "/profile/settings"
  id:
    | "__root__"
    | "/"
    | "/_authenticated"
    | "/auth"
    | "/dev"
    | "/intro"
    | "/auth/login"
    | "/auth/signup"
    | "/_authenticated/books/new"
    | "/_authenticated/books/"
    | "/_authenticated/books/$id/edit"
    | "/_authenticated/profile/categories/$id"
    | "/_authenticated/profile/categories/new"
    | "/_authenticated/books/$id/"
    | "/_authenticated/profile/(main)/"
    | "/_authenticated/profile/categories/"
    | "/_authenticated/profile/settings/"
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  DevRoute: typeof DevRoute
  IntroRoute: typeof IntroRoute
}

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/intro": {
      id: "/intro"
      path: "/intro"
      fullPath: "/intro"
      preLoaderRoute: typeof IntroRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/dev": {
      id: "/dev"
      path: "/dev"
      fullPath: "/dev"
      preLoaderRoute: typeof DevRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/auth": {
      id: "/auth"
      path: "/auth"
      fullPath: "/auth"
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/_authenticated": {
      id: "/_authenticated"
      path: ""
      fullPath: ""
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/": {
      id: "/"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/auth/signup": {
      id: "/auth/signup"
      path: "/signup"
      fullPath: "/auth/signup"
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    "/auth/login": {
      id: "/auth/login"
      path: "/login"
      fullPath: "/auth/login"
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    "/_authenticated/books/": {
      id: "/_authenticated/books/"
      path: "/books"
      fullPath: "/books"
      preLoaderRoute: typeof AuthenticatedBooksIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    "/_authenticated/books/new": {
      id: "/_authenticated/books/new"
      path: "/books/new"
      fullPath: "/books/new"
      preLoaderRoute: typeof AuthenticatedBooksNewRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    "/_authenticated/profile/settings/": {
      id: "/_authenticated/profile/settings/"
      path: "/profile/settings"
      fullPath: "/profile/settings"
      preLoaderRoute: typeof AuthenticatedProfileSettingsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    "/_authenticated/profile/categories/": {
      id: "/_authenticated/profile/categories/"
      path: "/profile/categories"
      fullPath: "/profile/categories"
      preLoaderRoute: typeof AuthenticatedProfileCategoriesIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    "/_authenticated/profile/(main)/": {
      id: "/_authenticated/profile/(main)/"
      path: "/profile"
      fullPath: "/profile"
      preLoaderRoute: typeof AuthenticatedProfilemainIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    "/_authenticated/books/$id/": {
      id: "/_authenticated/books/$id/"
      path: "/books/$id"
      fullPath: "/books/$id"
      preLoaderRoute: typeof AuthenticatedBooksIdIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    "/_authenticated/profile/categories/new": {
      id: "/_authenticated/profile/categories/new"
      path: "/profile/categories/new"
      fullPath: "/profile/categories/new"
      preLoaderRoute: typeof AuthenticatedProfileCategoriesNewRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    "/_authenticated/profile/categories/$id": {
      id: "/_authenticated/profile/categories/$id"
      path: "/profile/categories/$id"
      fullPath: "/profile/categories/$id"
      preLoaderRoute: typeof AuthenticatedProfileCategoriesIdRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    "/_authenticated/books/$id/edit": {
      id: "/_authenticated/books/$id/edit"
      path: "/books/$id/edit"
      fullPath: "/books/$id/edit"
      preLoaderRoute: typeof AuthenticatedBooksIdEditRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
  }
}

interface AuthenticatedRouteRouteChildren {
  AuthenticatedBooksNewRoute: typeof AuthenticatedBooksNewRoute
  AuthenticatedBooksIndexRoute: typeof AuthenticatedBooksIndexRoute
  AuthenticatedBooksIdEditRoute: typeof AuthenticatedBooksIdEditRoute
  AuthenticatedProfileCategoriesIdRoute: typeof AuthenticatedProfileCategoriesIdRoute
  AuthenticatedProfileCategoriesNewRoute: typeof AuthenticatedProfileCategoriesNewRoute
  AuthenticatedBooksIdIndexRoute: typeof AuthenticatedBooksIdIndexRoute
  AuthenticatedProfilemainIndexRoute: typeof AuthenticatedProfilemainIndexRoute
  AuthenticatedProfileCategoriesIndexRoute: typeof AuthenticatedProfileCategoriesIndexRoute
  AuthenticatedProfileSettingsIndexRoute: typeof AuthenticatedProfileSettingsIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedBooksNewRoute: AuthenticatedBooksNewRoute,
  AuthenticatedBooksIndexRoute: AuthenticatedBooksIndexRoute,
  AuthenticatedBooksIdEditRoute: AuthenticatedBooksIdEditRoute,
  AuthenticatedProfileCategoriesIdRoute: AuthenticatedProfileCategoriesIdRoute,
  AuthenticatedProfileCategoriesNewRoute:
    AuthenticatedProfileCategoriesNewRoute,
  AuthenticatedBooksIdIndexRoute: AuthenticatedBooksIdIndexRoute,
  AuthenticatedProfilemainIndexRoute: AuthenticatedProfilemainIndexRoute,
  AuthenticatedProfileCategoriesIndexRoute:
    AuthenticatedProfileCategoriesIndexRoute,
  AuthenticatedProfileSettingsIndexRoute:
    AuthenticatedProfileSettingsIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

interface AuthRouteRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  DevRoute: DevRoute,
  IntroRoute: IntroRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
